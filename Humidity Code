#include <WiFi.h>
#include <WebServer.h>
#include <DHT.h>

// === Function Declarations (fix compiler whine) ===
void handleRoot();
void handleToggle();
void handleConfig();
void handleSetThreshold();
void handleSetMode();


// ======= WiFi Credentials =======
const char *ssid = "ESP_HUM";
const char *password = "123456789";
const char* http_username = "admin";
const char* http_password = "admin123";

// ======= Pin Assignments =======
const int HUMIDIFIER_RELAY_PIN = 4;
const int DEHUMIDIFIER_RELAY_PIN = 5;
const int DHT_PIN = 14;

#define DHTTYPE DHT22
DHT dht(DHT_PIN, DHTTYPE);

// ======= System State =======
float humidityThreshold = 30.0;       // Default threshold (%)
bool manualMode = false;

WebServer server(80);

// ======= Setup Functions =======
void setupRelays() {
  pinMode(HUMIDIFIER_RELAY_PIN, OUTPUT);
  pinMode(DEHUMIDIFIER_RELAY_PIN, OUTPUT);

  digitalWrite(HUMIDIFIER_RELAY_PIN, HIGH);     // OFF by default
  digitalWrite(DEHUMIDIFIER_RELAY_PIN, HIGH);   // OFF by default
}

void setupWebRoutes() {
  server.on("/", handleRoot);
  server.on("/toggle", handleToggle);
  server.on("/config", handleConfig);
  server.on("/setThreshold", handleSetThreshold);
  server.on("/setMode", handleSetMode);
}

// ======= Web Handlers =======
void handleRoot() {
  if (!server.authenticate(http_username, http_password)) return server.requestAuthentication();

  String modeStr = manualMode ? "Manual" : "Auto";
  String otherModeStr = manualMode ? "auto" : "manual";

  String html = "<!DOCTYPE html><html><head><title>Humidity Control</title><meta name='viewport' content='width=device-width, initial-scale=1'>";
  html += "<style>body{font-family:sans-serif;text-align:center;background:#eef;}button,input{padding:15px 30px;margin:10px;font-size:20px;}</style></head><body>";
  html += "<h2>ESP32 Humidity Control</h2>";
  html += "<p><b>Mode:</b> " + modeStr + "</p>";
  html += "<form action='/setMode'><input type='hidden' name='mode' value='" + otherModeStr + "'><input type='submit' value='Switch to " + otherModeStr + "'></form><br>";

  html += "<button onclick=\"location.href='/toggle?relay=1'\">Toggle Dehumidifier</button><br>";
  html += "<button onclick=\"location.href='/toggle?relay=2'\">Toggle Humidifier</button><br><br>";

  html += "<a href='/config'>Go to Config</a>";
  html += "</body></html>";
  server.send(200, "text/html", html);
}

void handleToggle() {
  if (!server.authenticate(http_username, http_password)) return server.requestAuthentication();

  if (!server.hasArg("relay")) {
    server.send(400, "text/plain", "Missing relay arg");
    return;
  }

  manualMode = true;

  int relay = server.arg("relay").toInt();
  if (relay == 1) digitalWrite(DEHUMIDIFIER_RELAY_PIN, !digitalRead(DEHUMIDIFIER_RELAY_PIN));
  else if (relay == 2) digitalWrite(HUMIDIFIER_RELAY_PIN, !digitalRead(HUMIDIFIER_RELAY_PIN));

  server.sendHeader("Location", "/");
  server.send(303);
}

void handleConfig() {
  if (!server.authenticate(http_username, http_password)) return server.requestAuthentication();

  String html = "<!DOCTYPE html><html><head><title>Config</title></head><body>";
  html += "<h2>Set Humidity Threshold</h2>";
  html += "<form action='/setThreshold'>";
  html += "<input type='number' step='0.1' name='value' value='" + String(humidityThreshold) + "'>";
  html += "<input type='submit' value='Update'>";
  html += "</form><p>Current Threshold: " + String(humidityThreshold) + " %</p>";
  html += "<a href='/'>Back</a>";
  html += "</body></html>";
  server.send(200, "text/html", html);
}

void handleSetThreshold() {
  if (!server.authenticate(http_username, http_password)) return server.requestAuthentication();

  if (server.hasArg("value")) {
    humidityThreshold = server.arg("value").toFloat();
  }

  server.sendHeader("Location", "/config");
  server.send(303);
}

void handleSetMode() {
  if (!server.authenticate(http_username, http_password)) return server.requestAuthentication();

  if (server.hasArg("mode")) {
    String mode = server.arg("mode");
    manualMode = (mode == "manual");
    Serial.println("Mode changed to: " + mode);
  }

  server.sendHeader("Location", "/");
  server.send(303);
}

// ======= Main Setup =======
void setup() {
  Serial.begin(115200);
  dht.begin();

  WiFi.softAP(ssid, password);
  Serial.println("WiFi AP started. Connect to: ESP_HUM");

  setupRelays();
  setupWebRoutes();

  server.begin();
  Serial.println("Web server started.");
}

// ======= Main Loop =======
void loop() {
  server.handleClient();

  if (!manualMode) {
    float humidity = dht.readHumidity();
    if (isnan(humidity)) {
      Serial.println("Failed to read from DHT sensor!");
      return;
    }

    Serial.print("Humidity: ");
    Serial.print(humidity);
    Serial.println(" %");

    if (humidity > humidityThreshold + 2) {
      digitalWrite(DEHUMIDIFIER_RELAY_PIN, HIGH); // ON
      digitalWrite(HUMIDIFIER_RELAY_PIN, HIGH);   // OFF
      Serial.println("Too Humid = Dehumidifier ON, Humidifier OFF");
    } else if (humidity < humidityThreshold - 2) {
      digitalWrite(DEHUMIDIFIER_RELAY_PIN, LOW);  // OFF
      digitalWrite(HUMIDIFIER_RELAY_PIN, LOW);    // ON
      Serial.println("Too Dry = Humidifier ON, Dehumidifier OFF");
    } else {
      digitalWrite(DEHUMIDIFIER_RELAY_PIN, LOW);  // OFF
      digitalWrite(HUMIDIFIER_RELAY_PIN, HIGH);   // OFF
      Serial.println("Humidity OK = Both OFF");
    }
  } else {
    Serial.println("Manual Mode Active â€” Automation Paused");
  }

  delay(3000);
}
